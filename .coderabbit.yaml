# CodeRabbit configuration file for a Spring Boot application
# Note: This configuration adheres to CodeRabbit's supported schema

# Enable or disable CodeRabbit reviews
reviews:
  enabled: true
  # Minimum confidence level for suggestions (0.0 to 1.0)
  confidence: 0.7
  # Enable analysis for specific file types
  file_extensions:
    - .java
    - .xml
    - .yml
    - .properties

# Language-specific settings
languages:
  java:
    # Linting and formatting
    lint:
      enabled: true
      tools:
        - name: checkstyle
          config_file: checkstyle.xml
        - name: pmd
          config_file: pmd-ruleset.xml
        - name: spotbugs
          config_file: spotbugs.xml
        - name: google-java-format
          config_file: google-java-format.xml
    # Code quality checks
    quality:
      enabled: true
      checks:
        complexity:
          max: 10 # Maximum cyclomatic complexity per method
        duplication:
          max_percentage: 3 # Maximum percentage of duplicated code
        maintainability:
          min_index: 70 # Minimum maintainability index (0-100)
        javadoc:
          enabled: true
          require: true # Require Javadoc for public classes/methods
    # Best practices for Spring Boot
    best_practices:
      enabled: true
      checks:
        exception_handling:
          require_controller_advice: true # Use @ControllerAdvice
        injection:
          prefer_constructor: true # Prefer constructor injection over @Autowired
        logging:
          prefer_slf4j: true # Use SLF4J for logging
        naming:
          controllers: "*Controller" # Controller class names
          services: "*Service" # Service class names
          repositories: "*Repository" # Repository class names
    # Security checks
    security:
      enabled: true
      min_severity: medium # Report medium and high-severity issues

# Code coverage settings
coverage:
  enabled: true
  min_percentage: 85 # Minimum coverage percentage
  report_path: target/site/jacoco/jacoco.xml # JaCoCo report path
  fail_on_threshold: true # Fail if coverage is below threshold
  branch_coverage: true # Enforce branch coverage

# File patterns to include/exclude for review
paths:
  include:
    - "**/*.java"
    - "**/*.xml"
    - "**/*.yml"
    - "**/*.properties"
  exclude:
    - "**/target/**"
    - "**/dist/**"
    - "**/build/**"
    - "**/coverage/**"
    - "**/test/**"
    - "**/generated/**"
    - "**/*.generated.*"

# CI integration settings
ci:
  fail_on_error: true # Fail CI if critical issues are found
  report:
    formats:
      - json
      - html
  notifications:
    github: true # Post results as GitHub checks
    slack:
      enabled: true
      webhook_env: SLACK_WEBHOOK_URL # Environment variable for Slack webhook
      events:
        - failure
        - security_issues

# Performance settings
performance:
  max_file_size: 1048576 # 1MB limit for files
  timeout: 300 # Maximum time for checks (in seconds)
  incremental: true # Only check changed files
